AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  Identifier:
    Value: main
  Input:
    Description: Input of all required parameters in nested stacks
  Output:
    Description: N/A
Description: ""
Parameters:
  Prefix:
    Description: ""
    Type: String
  MgmtVPC:
    Description: "Stack name of Management VPC module."
    Type: String
  ProdVPC:
    Description: "Stack name of Production VPC module."
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  BastionInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t3.small
    ConstraintDescription: must be a valid EC2 instance type.
  WebInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t3.small
    ConstraintDescription: must be a valid EC2 instance type.
  SftpInstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t3.small
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  BastionAmiId:
    Type: String
  WebAmiId:
    Type: String
  SftpAmiId:
    Type: String
Resources:
  BastionInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref "BastionInstanceType"
      SecurityGroups: [!Ref "BastionInstanceSecurityGroup"]
      KeyName: !Ref "KeyName"
      ImageId: !Ref "BastionAmiId"
      SubnetId: { "Fn::ImportValue": !Sub "${MgmtVPC}-CoreSubnet1" }
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}spdbast01"
  BastionInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Prefix}-ehs-bastion-sg"
      GroupDescription: Enable SSH access via port 22
      VpcId: { "Fn::ImportValue": !Sub "${MgmtVPC}-Id" }
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref "SSHLocation"
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: !Ref "SSHLocation"
  WebInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref "WebInstanceType"
      SecurityGroups: [!Ref "WebInstanceSecurityGroup"]
      KeyName: !Ref "KeyName"
      ImageId: !Ref "WebAmiId"
      SubnetId: { "Fn::ImportValue": !Sub "${ProdVPC}-CoreSubnet1" }
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}spdweb01"
  WebInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Prefix}-ehs-web-sg"
      GroupDescription: Enable SSH access via port 22
      VpcId: { "Fn::ImportValue": !Sub "${ProdVPC}-Id" }
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 172.0.0.0/8
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 172.0.0.0/8
        - IpProtocol: tcp
          FromPort: 27017
          ToPort: 27017
          CidrIp: 172.0.0.0/8
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 172.0.0.0/8
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 172.0.0.0/8
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 172.0.0.0/8
  SftpInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref "SftpInstanceType"
      SecurityGroups: [!Ref "SftpInstanceSecurityGroup"]
      KeyName: !Ref "KeyName"
      ImageId: !Ref "SftpAmiId"
      SubnetId: { "Fn::ImportValue": !Sub "${MgmtVPC}-CoreSubnet1" }
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}spdsftp01"
  SftpInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Prefix}-ehs-sftp-sg"
      GroupDescription: Enable SSH access via port 22
      VpcId: { "Fn::ImportValue": !Sub "${MgmtVPC}-Id" }
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 172.0.0.0/8
# Outputs:
#   BastionInstanceId:
#     Description: InstanceId of the newly created EC2 instance
#     Value: !Ref "EC2Instance"
#   PublicDNS:
#     Description: Public DNSName of the newly created EC2 instance
#     Value: !GetAtt [EC2Instance, PublicDnsName]
#   PublicIP:
#     Description: Public IP address of the newly created EC2 instance
#     Value: !GetAtt [EC2Instance, PublicIp]
